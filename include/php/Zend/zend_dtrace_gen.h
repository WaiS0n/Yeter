/*
 * Generated by dtrace(1M).
 */

#ifndef	_ZEND_DTRACE_GEN_H_BAK
#define	_ZEND_DTRACE_GEN_H_BAK

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#include <sys/sdt.h>

#if _DTRACE_VERSION

#define	DTRACE_COMPILE_FILE_ENTRY(arg0, arg1) \
	__dtrace_php___compile__file__entry(arg0, arg1)
#ifndef	__sparc
#define	DTRACE_COMPILE_FILE_ENTRY_ENABLED() \
	__dtraceenabled_php___compile__file__entry()
#else
#define	DTRACE_COMPILE_FILE_ENTRY_ENABLED() \
	__dtraceenabled_php___compile__file__entry(0)
#endif
#define	DTRACE_COMPILE_FILE_RETURN(arg0, arg1) \
	__dtrace_php___compile__file__return(arg0, arg1)
#ifndef	__sparc
#define	DTRACE_COMPILE_FILE_RETURN_ENABLED() \
	__dtraceenabled_php___compile__file__return()
#else
#define	DTRACE_COMPILE_FILE_RETURN_ENABLED() \
	__dtraceenabled_php___compile__file__return(0)
#endif
#define	DTRACE_ERROR(arg0, arg1, arg2) \
	__dtrace_php___error(arg0, arg1, arg2)
#ifndef	__sparc
#define	DTRACE_ERROR_ENABLED() \
	__dtraceenabled_php___error()
#else
#define	DTRACE_ERROR_ENABLED() \
	__dtraceenabled_php___error(0)
#endif
#define	DTRACE_EXCEPTION_CAUGHT(arg0) \
	__dtrace_php___exception__caught(arg0)
#ifndef	__sparc
#define	DTRACE_EXCEPTION_CAUGHT_ENABLED() \
	__dtraceenabled_php___exception__caught()
#else
#define	DTRACE_EXCEPTION_CAUGHT_ENABLED() \
	__dtraceenabled_php___exception__caught(0)
#endif
#define	DTRACE_EXCEPTION_THROWN(arg0) \
	__dtrace_php___exception__thrown(arg0)
#ifndef	__sparc
#define	DTRACE_EXCEPTION_THROWN_ENABLED() \
	__dtraceenabled_php___exception__thrown()
#else
#define	DTRACE_EXCEPTION_THROWN_ENABLED() \
	__dtraceenabled_php___exception__thrown(0)
#endif
#define	DTRACE_EXECUTE_ENTRY(arg0, arg1) \
	__dtrace_php___execute__entry(arg0, arg1)
#ifndef	__sparc
#define	DTRACE_EXECUTE_ENTRY_ENABLED() \
	__dtraceenabled_php___execute__entry()
#else
#define	DTRACE_EXECUTE_ENTRY_ENABLED() \
	__dtraceenabled_php___execute__entry(0)
#endif
#define	DTRACE_EXECUTE_RETURN(arg0, arg1) \
	__dtrace_php___execute__return(arg0, arg1)
#ifndef	__sparc
#define	DTRACE_EXECUTE_RETURN_ENABLED() \
	__dtraceenabled_php___execute__return()
#else
#define	DTRACE_EXECUTE_RETURN_ENABLED() \
	__dtraceenabled_php___execute__return(0)
#endif
#define	DTRACE_FUNCTION_ENTRY(arg0, arg1, arg2, arg3, arg4) \
	__dtrace_php___function__entry(arg0, arg1, arg2, arg3, arg4)
#ifndef	__sparc
#define	DTRACE_FUNCTION_ENTRY_ENABLED() \
	__dtraceenabled_php___function__entry()
#else
#define	DTRACE_FUNCTION_ENTRY_ENABLED() \
	__dtraceenabled_php___function__entry(0)
#endif
#define	DTRACE_FUNCTION_RETURN(arg0, arg1, arg2, arg3, arg4) \
	__dtrace_php___function__return(arg0, arg1, arg2, arg3, arg4)
#ifndef	__sparc
#define	DTRACE_FUNCTION_RETURN_ENABLED() \
	__dtraceenabled_php___function__return()
#else
#define	DTRACE_FUNCTION_RETURN_ENABLED() \
	__dtraceenabled_php___function__return(0)
#endif
#define	DTRACE_REQUEST_SHUTDOWN(arg0, arg1, arg2) \
	__dtrace_php___request__shutdown(arg0, arg1, arg2)
#ifndef	__sparc
#define	DTRACE_REQUEST_SHUTDOWN_ENABLED() \
	__dtraceenabled_php___request__shutdown()
#else
#define	DTRACE_REQUEST_SHUTDOWN_ENABLED() \
	__dtraceenabled_php___request__shutdown(0)
#endif
#define	DTRACE_REQUEST_STARTUP(arg0, arg1, arg2) \
	__dtrace_php___request__startup(arg0, arg1, arg2)
#ifndef	__sparc
#define	DTRACE_REQUEST_STARTUP_ENABLED() \
	__dtraceenabled_php___request__startup()
#else
#define	DTRACE_REQUEST_STARTUP_ENABLED() \
	__dtraceenabled_php___request__startup(0)
#endif


extern void __dtrace_php___compile__file__entry(char *, char *);
#ifndef	__sparc
extern int __dtraceenabled_php___compile__file__entry(void);
#else
extern int __dtraceenabled_php___compile__file__entry(long);
#endif
extern void __dtrace_php___compile__file__return(char *, char *);
#ifndef	__sparc
extern int __dtraceenabled_php___compile__file__return(void);
#else
extern int __dtraceenabled_php___compile__file__return(long);
#endif
extern void __dtrace_php___error(char *, char *, int);
#ifndef	__sparc
extern int __dtraceenabled_php___error(void);
#else
extern int __dtraceenabled_php___error(long);
#endif
extern void __dtrace_php___exception__caught(char *);
#ifndef	__sparc
extern int __dtraceenabled_php___exception__caught(void);
#else
extern int __dtraceenabled_php___exception__caught(long);
#endif
extern void __dtrace_php___exception__thrown(char *);
#ifndef	__sparc
extern int __dtraceenabled_php___exception__thrown(void);
#else
extern int __dtraceenabled_php___exception__thrown(long);
#endif
extern void __dtrace_php___execute__entry(char *, int);
#ifndef	__sparc
extern int __dtraceenabled_php___execute__entry(void);
#else
extern int __dtraceenabled_php___execute__entry(long);
#endif
extern void __dtrace_php___execute__return(char *, int);
#ifndef	__sparc
extern int __dtraceenabled_php___execute__return(void);
#else
extern int __dtraceenabled_php___execute__return(long);
#endif
extern void __dtrace_php___function__entry(char *, char *, int, char *, char *);
#ifndef	__sparc
extern int __dtraceenabled_php___function__entry(void);
#else
extern int __dtraceenabled_php___function__entry(long);
#endif
extern void __dtrace_php___function__return(char *, char *, int, char *, char *);
#ifndef	__sparc
extern int __dtraceenabled_php___function__return(void);
#else
extern int __dtraceenabled_php___function__return(long);
#endif
extern void __dtrace_php___request__shutdown(char *, char *, char *);
#ifndef	__sparc
extern int __dtraceenabled_php___request__shutdown(void);
#else
extern int __dtraceenabled_php___request__shutdown(long);
#endif
extern void __dtrace_php___request__startup(char *, char *, char *);
#ifndef	__sparc
extern int __dtraceenabled_php___request__startup(void);
#else
extern int __dtraceenabled_php___request__startup(long);
#endif

#else

#define	DTRACE_COMPILE_FILE_ENTRY(arg0, arg1)
#define	DTRACE_COMPILE_FILE_ENTRY_ENABLED() (0)
#define	DTRACE_COMPILE_FILE_RETURN(arg0, arg1)
#define	DTRACE_COMPILE_FILE_RETURN_ENABLED() (0)
#define	DTRACE_ERROR(arg0, arg1, arg2)
#define	DTRACE_ERROR_ENABLED() (0)
#define	DTRACE_EXCEPTION_CAUGHT(arg0)
#define	DTRACE_EXCEPTION_CAUGHT_ENABLED() (0)
#define	DTRACE_EXCEPTION_THROWN(arg0)
#define	DTRACE_EXCEPTION_THROWN_ENABLED() (0)
#define	DTRACE_EXECUTE_ENTRY(arg0, arg1)
#define	DTRACE_EXECUTE_ENTRY_ENABLED() (0)
#define	DTRACE_EXECUTE_RETURN(arg0, arg1)
#define	DTRACE_EXECUTE_RETURN_ENABLED() (0)
#define	DTRACE_FUNCTION_ENTRY(arg0, arg1, arg2, arg3, arg4)
#define	DTRACE_FUNCTION_ENTRY_ENABLED() (0)
#define	DTRACE_FUNCTION_RETURN(arg0, arg1, arg2, arg3, arg4)
#define	DTRACE_FUNCTION_RETURN_ENABLED() (0)
#define	DTRACE_REQUEST_SHUTDOWN(arg0, arg1, arg2)
#define	DTRACE_REQUEST_SHUTDOWN_ENABLED() (0)
#define	DTRACE_REQUEST_STARTUP(arg0, arg1, arg2)
#define	DTRACE_REQUEST_STARTUP_ENABLED() (0)

#endif


#ifdef	__cplusplus
}
#endif

#endif	/* _ZEND_DTRACE_GEN_H_BAK */
