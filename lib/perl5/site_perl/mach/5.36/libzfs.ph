require '_h2ph_pre.ph';

no warnings qw(redefine misc);

unless(defined(&_LIBZFS_H)) {
    eval 'sub _LIBZFS_H () { &extern  &__attribute__(( &visibility("default")));}' unless defined(&_LIBZFS_H);
    require 'assert.ph';
    require 'libshare.ph';
    require 'libnvpair.ph';
    require 'sys/mnttab.ph';
    require 'sys/param.ph';
    require 'sys/types.ph';
    require 'sys/fs/zfs.ph';
    require 'sys/avl.ph';
    require 'libzfs_core.ph';
    if(defined(&__cplusplus)) {
    }
    eval 'sub ZFS_MAXPROPLEN () { &MAXPATHLEN;}' unless defined(&ZFS_MAXPROPLEN);
    eval 'sub ZPOOL_MAXPROPLEN () { &MAXPATHLEN;}' unless defined(&ZPOOL_MAXPROPLEN);
    eval("sub EZFS_SUCCESS () { 0; }") unless defined(&EZFS_SUCCESS);
    eval("sub EZFS_NOMEM () { 2000; }") unless defined(&EZFS_NOMEM);
    eval("sub EZFS_BADPROP () { 2001; }") unless defined(&EZFS_BADPROP);
    eval("sub EZFS_PROPREADONLY () { 2002; }") unless defined(&EZFS_PROPREADONLY);
    eval("sub EZFS_PROPTYPE () { 2003; }") unless defined(&EZFS_PROPTYPE);
    eval("sub EZFS_PROPNONINHERIT () { 2004; }") unless defined(&EZFS_PROPNONINHERIT);
    eval("sub EZFS_PROPSPACE () { 2005; }") unless defined(&EZFS_PROPSPACE);
    eval("sub EZFS_BADTYPE () { 2006; }") unless defined(&EZFS_BADTYPE);
    eval("sub EZFS_BUSY () { 2007; }") unless defined(&EZFS_BUSY);
    eval("sub EZFS_EXISTS () { 2008; }") unless defined(&EZFS_EXISTS);
    eval("sub EZFS_NOENT () { 2009; }") unless defined(&EZFS_NOENT);
    eval("sub EZFS_BADSTREAM () { 2010; }") unless defined(&EZFS_BADSTREAM);
    eval("sub EZFS_DSREADONLY () { 2011; }") unless defined(&EZFS_DSREADONLY);
    eval("sub EZFS_VOLTOOBIG () { 2012; }") unless defined(&EZFS_VOLTOOBIG);
    eval("sub EZFS_INVALIDNAME () { 2013; }") unless defined(&EZFS_INVALIDNAME);
    eval("sub EZFS_BADRESTORE () { 2014; }") unless defined(&EZFS_BADRESTORE);
    eval("sub EZFS_BADBACKUP () { 2015; }") unless defined(&EZFS_BADBACKUP);
    eval("sub EZFS_BADTARGET () { 2016; }") unless defined(&EZFS_BADTARGET);
    eval("sub EZFS_NODEVICE () { 2017; }") unless defined(&EZFS_NODEVICE);
    eval("sub EZFS_BADDEV () { 2018; }") unless defined(&EZFS_BADDEV);
    eval("sub EZFS_NOREPLICAS () { 2019; }") unless defined(&EZFS_NOREPLICAS);
    eval("sub EZFS_RESILVERING () { 2020; }") unless defined(&EZFS_RESILVERING);
    eval("sub EZFS_BADVERSION () { 2021; }") unless defined(&EZFS_BADVERSION);
    eval("sub EZFS_POOLUNAVAIL () { 2022; }") unless defined(&EZFS_POOLUNAVAIL);
    eval("sub EZFS_DEVOVERFLOW () { 2023; }") unless defined(&EZFS_DEVOVERFLOW);
    eval("sub EZFS_BADPATH () { 2024; }") unless defined(&EZFS_BADPATH);
    eval("sub EZFS_CROSSTARGET () { 2025; }") unless defined(&EZFS_CROSSTARGET);
    eval("sub EZFS_ZONED () { 2026; }") unless defined(&EZFS_ZONED);
    eval("sub EZFS_MOUNTFAILED () { 2027; }") unless defined(&EZFS_MOUNTFAILED);
    eval("sub EZFS_UMOUNTFAILED () { 2028; }") unless defined(&EZFS_UMOUNTFAILED);
    eval("sub EZFS_UNSHARENFSFAILED () { 2029; }") unless defined(&EZFS_UNSHARENFSFAILED);
    eval("sub EZFS_SHARENFSFAILED () { 2030; }") unless defined(&EZFS_SHARENFSFAILED);
    eval("sub EZFS_PERM () { 2031; }") unless defined(&EZFS_PERM);
    eval("sub EZFS_NOSPC () { 2032; }") unless defined(&EZFS_NOSPC);
    eval("sub EZFS_FAULT () { 2033; }") unless defined(&EZFS_FAULT);
    eval("sub EZFS_IO () { 2034; }") unless defined(&EZFS_IO);
    eval("sub EZFS_INTR () { 2035; }") unless defined(&EZFS_INTR);
    eval("sub EZFS_ISSPARE () { 2036; }") unless defined(&EZFS_ISSPARE);
    eval("sub EZFS_INVALCONFIG () { 2037; }") unless defined(&EZFS_INVALCONFIG);
    eval("sub EZFS_RECURSIVE () { 2038; }") unless defined(&EZFS_RECURSIVE);
    eval("sub EZFS_NOHISTORY () { 2039; }") unless defined(&EZFS_NOHISTORY);
    eval("sub EZFS_POOLPROPS () { 2040; }") unless defined(&EZFS_POOLPROPS);
    eval("sub EZFS_POOL_NOTSUP () { 2041; }") unless defined(&EZFS_POOL_NOTSUP);
    eval("sub EZFS_POOL_INVALARG () { 2042; }") unless defined(&EZFS_POOL_INVALARG);
    eval("sub EZFS_NAMETOOLONG () { 2043; }") unless defined(&EZFS_NAMETOOLONG);
    eval("sub EZFS_OPENFAILED () { 2044; }") unless defined(&EZFS_OPENFAILED);
    eval("sub EZFS_NOCAP () { 2045; }") unless defined(&EZFS_NOCAP);
    eval("sub EZFS_LABELFAILED () { 2046; }") unless defined(&EZFS_LABELFAILED);
    eval("sub EZFS_BADWHO () { 2047; }") unless defined(&EZFS_BADWHO);
    eval("sub EZFS_BADPERM () { 2048; }") unless defined(&EZFS_BADPERM);
    eval("sub EZFS_BADPERMSET () { 2049; }") unless defined(&EZFS_BADPERMSET);
    eval("sub EZFS_NODELEGATION () { 2050; }") unless defined(&EZFS_NODELEGATION);
    eval("sub EZFS_UNSHARESMBFAILED () { 2051; }") unless defined(&EZFS_UNSHARESMBFAILED);
    eval("sub EZFS_SHARESMBFAILED () { 2052; }") unless defined(&EZFS_SHARESMBFAILED);
    eval("sub EZFS_BADCACHE () { 2053; }") unless defined(&EZFS_BADCACHE);
    eval("sub EZFS_ISL2CACHE () { 2054; }") unless defined(&EZFS_ISL2CACHE);
    eval("sub EZFS_VDEVNOTSUP () { 2055; }") unless defined(&EZFS_VDEVNOTSUP);
    eval("sub EZFS_NOTSUP () { 2056; }") unless defined(&EZFS_NOTSUP);
    eval("sub EZFS_ACTIVE_SPARE () { 2057; }") unless defined(&EZFS_ACTIVE_SPARE);
    eval("sub EZFS_UNPLAYED_LOGS () { 2058; }") unless defined(&EZFS_UNPLAYED_LOGS);
    eval("sub EZFS_REFTAG_RELE () { 2059; }") unless defined(&EZFS_REFTAG_RELE);
    eval("sub EZFS_REFTAG_HOLD () { 2060; }") unless defined(&EZFS_REFTAG_HOLD);
    eval("sub EZFS_TAGTOOLONG () { 2061; }") unless defined(&EZFS_TAGTOOLONG);
    eval("sub EZFS_PIPEFAILED () { 2062; }") unless defined(&EZFS_PIPEFAILED);
    eval("sub EZFS_THREADCREATEFAILED () { 2063; }") unless defined(&EZFS_THREADCREATEFAILED);
    eval("sub EZFS_POSTSPLIT_ONLINE () { 2064; }") unless defined(&EZFS_POSTSPLIT_ONLINE);
    eval("sub EZFS_SCRUBBING () { 2065; }") unless defined(&EZFS_SCRUBBING);
    eval("sub EZFS_ERRORSCRUBBING () { 2066; }") unless defined(&EZFS_ERRORSCRUBBING);
    eval("sub EZFS_ERRORSCRUB_PAUSED () { 2067; }") unless defined(&EZFS_ERRORSCRUB_PAUSED);
    eval("sub EZFS_NO_SCRUB () { 2068; }") unless defined(&EZFS_NO_SCRUB);
    eval("sub EZFS_DIFF () { 2069; }") unless defined(&EZFS_DIFF);
    eval("sub EZFS_DIFFDATA () { 2070; }") unless defined(&EZFS_DIFFDATA);
    eval("sub EZFS_POOLREADONLY () { 2071; }") unless defined(&EZFS_POOLREADONLY);
    eval("sub EZFS_SCRUB_PAUSED () { 2072; }") unless defined(&EZFS_SCRUB_PAUSED);
    eval("sub EZFS_SCRUB_PAUSED_TO_CANCEL () { 2073; }") unless defined(&EZFS_SCRUB_PAUSED_TO_CANCEL);
    eval("sub EZFS_ACTIVE_POOL () { 2074; }") unless defined(&EZFS_ACTIVE_POOL);
    eval("sub EZFS_CRYPTOFAILED () { 2075; }") unless defined(&EZFS_CRYPTOFAILED);
    eval("sub EZFS_NO_PENDING () { 2076; }") unless defined(&EZFS_NO_PENDING);
    eval("sub EZFS_CHECKPOINT_EXISTS () { 2077; }") unless defined(&EZFS_CHECKPOINT_EXISTS);
    eval("sub EZFS_DISCARDING_CHECKPOINT () { 2078; }") unless defined(&EZFS_DISCARDING_CHECKPOINT);
    eval("sub EZFS_NO_CHECKPOINT () { 2079; }") unless defined(&EZFS_NO_CHECKPOINT);
    eval("sub EZFS_DEVRM_IN_PROGRESS () { 2080; }") unless defined(&EZFS_DEVRM_IN_PROGRESS);
    eval("sub EZFS_VDEV_TOO_BIG () { 2081; }") unless defined(&EZFS_VDEV_TOO_BIG);
    eval("sub EZFS_IOC_NOTSUPPORTED () { 2082; }") unless defined(&EZFS_IOC_NOTSUPPORTED);
    eval("sub EZFS_TOOMANY () { 2083; }") unless defined(&EZFS_TOOMANY);
    eval("sub EZFS_INITIALIZING () { 2084; }") unless defined(&EZFS_INITIALIZING);
    eval("sub EZFS_NO_INITIALIZE () { 2085; }") unless defined(&EZFS_NO_INITIALIZE);
    eval("sub EZFS_WRONG_PARENT () { 2086; }") unless defined(&EZFS_WRONG_PARENT);
    eval("sub EZFS_TRIMMING () { 2087; }") unless defined(&EZFS_TRIMMING);
    eval("sub EZFS_NO_TRIM () { 2088; }") unless defined(&EZFS_NO_TRIM);
    eval("sub EZFS_TRIM_NOTSUP () { 2089; }") unless defined(&EZFS_TRIM_NOTSUP);
    eval("sub EZFS_NO_RESILVER_DEFER () { 2090; }") unless defined(&EZFS_NO_RESILVER_DEFER);
    eval("sub EZFS_EXPORT_IN_PROGRESS () { 2091; }") unless defined(&EZFS_EXPORT_IN_PROGRESS);
    eval("sub EZFS_REBUILDING () { 2092; }") unless defined(&EZFS_REBUILDING);
    eval("sub EZFS_VDEV_NOTSUP () { 2093; }") unless defined(&EZFS_VDEV_NOTSUP);
    eval("sub EZFS_NOT_USER_NAMESPACE () { 2094; }") unless defined(&EZFS_NOT_USER_NAMESPACE);
    eval("sub EZFS_CKSUM () { 2095; }") unless defined(&EZFS_CKSUM);
    eval("sub EZFS_RESUME_EXISTS () { 2096; }") unless defined(&EZFS_RESUME_EXISTS);
    eval("sub EZFS_SHAREFAILED () { 2097; }") unless defined(&EZFS_SHAREFAILED);
    eval("sub EZFS_RAIDZ_EXPAND_IN_PROGRESS () { 2098; }") unless defined(&EZFS_RAIDZ_EXPAND_IN_PROGRESS);
    eval("sub EZFS_ASHIFT_MISMATCH () { 2099; }") unless defined(&EZFS_ASHIFT_MISMATCH);
    eval("sub EZFS_UNKNOWN () { 2100; }") unless defined(&EZFS_UNKNOWN);
    eval("sub ZPOOL_STATUS_CORRUPT_CACHE () { 0; }") unless defined(&ZPOOL_STATUS_CORRUPT_CACHE);
    eval("sub ZPOOL_STATUS_MISSING_DEV_R () { 1; }") unless defined(&ZPOOL_STATUS_MISSING_DEV_R);
    eval("sub ZPOOL_STATUS_MISSING_DEV_NR () { 2; }") unless defined(&ZPOOL_STATUS_MISSING_DEV_NR);
    eval("sub ZPOOL_STATUS_CORRUPT_LABEL_R () { 3; }") unless defined(&ZPOOL_STATUS_CORRUPT_LABEL_R);
    eval("sub ZPOOL_STATUS_CORRUPT_LABEL_NR () { 4; }") unless defined(&ZPOOL_STATUS_CORRUPT_LABEL_NR);
    eval("sub ZPOOL_STATUS_BAD_GUID_SUM () { 5; }") unless defined(&ZPOOL_STATUS_BAD_GUID_SUM);
    eval("sub ZPOOL_STATUS_CORRUPT_POOL () { 6; }") unless defined(&ZPOOL_STATUS_CORRUPT_POOL);
    eval("sub ZPOOL_STATUS_CORRUPT_DATA () { 7; }") unless defined(&ZPOOL_STATUS_CORRUPT_DATA);
    eval("sub ZPOOL_STATUS_FAILING_DEV () { 8; }") unless defined(&ZPOOL_STATUS_FAILING_DEV);
    eval("sub ZPOOL_STATUS_VERSION_NEWER () { 9; }") unless defined(&ZPOOL_STATUS_VERSION_NEWER);
    eval("sub ZPOOL_STATUS_HOSTID_MISMATCH () { 10; }") unless defined(&ZPOOL_STATUS_HOSTID_MISMATCH);
    eval("sub ZPOOL_STATUS_HOSTID_ACTIVE () { 11; }") unless defined(&ZPOOL_STATUS_HOSTID_ACTIVE);
    eval("sub ZPOOL_STATUS_HOSTID_REQUIRED () { 12; }") unless defined(&ZPOOL_STATUS_HOSTID_REQUIRED);
    eval("sub ZPOOL_STATUS_IO_FAILURE_WAIT () { 13; }") unless defined(&ZPOOL_STATUS_IO_FAILURE_WAIT);
    eval("sub ZPOOL_STATUS_IO_FAILURE_CONTINUE () { 14; }") unless defined(&ZPOOL_STATUS_IO_FAILURE_CONTINUE);
    eval("sub ZPOOL_STATUS_IO_FAILURE_MMP () { 15; }") unless defined(&ZPOOL_STATUS_IO_FAILURE_MMP);
    eval("sub ZPOOL_STATUS_BAD_LOG () { 16; }") unless defined(&ZPOOL_STATUS_BAD_LOG);
    eval("sub ZPOOL_STATUS_ERRATA () { 17; }") unless defined(&ZPOOL_STATUS_ERRATA);
    eval("sub ZPOOL_STATUS_UNSUP_FEAT_READ () { 18; }") unless defined(&ZPOOL_STATUS_UNSUP_FEAT_READ);
    eval("sub ZPOOL_STATUS_UNSUP_FEAT_WRITE () { 19; }") unless defined(&ZPOOL_STATUS_UNSUP_FEAT_WRITE);
    eval("sub ZPOOL_STATUS_FAULTED_DEV_R () { 20; }") unless defined(&ZPOOL_STATUS_FAULTED_DEV_R);
    eval("sub ZPOOL_STATUS_FAULTED_DEV_NR () { 21; }") unless defined(&ZPOOL_STATUS_FAULTED_DEV_NR);
    eval("sub ZPOOL_STATUS_VERSION_OLDER () { 22; }") unless defined(&ZPOOL_STATUS_VERSION_OLDER);
    eval("sub ZPOOL_STATUS_FEAT_DISABLED () { 23; }") unless defined(&ZPOOL_STATUS_FEAT_DISABLED);
    eval("sub ZPOOL_STATUS_RESILVERING () { 24; }") unless defined(&ZPOOL_STATUS_RESILVERING);
    eval("sub ZPOOL_STATUS_OFFLINE_DEV () { 25; }") unless defined(&ZPOOL_STATUS_OFFLINE_DEV);
    eval("sub ZPOOL_STATUS_REMOVED_DEV () { 26; }") unless defined(&ZPOOL_STATUS_REMOVED_DEV);
    eval("sub ZPOOL_STATUS_REBUILDING () { 27; }") unless defined(&ZPOOL_STATUS_REBUILDING);
    eval("sub ZPOOL_STATUS_REBUILD_SCRUB () { 28; }") unless defined(&ZPOOL_STATUS_REBUILD_SCRUB);
    eval("sub ZPOOL_STATUS_NON_NATIVE_ASHIFT () { 29; }") unless defined(&ZPOOL_STATUS_NON_NATIVE_ASHIFT);
    eval("sub ZPOOL_STATUS_COMPATIBILITY_ERR () { 30; }") unless defined(&ZPOOL_STATUS_COMPATIBILITY_ERR);
    eval("sub ZPOOL_STATUS_INCOMPATIBLE_FEAT () { 31; }") unless defined(&ZPOOL_STATUS_INCOMPATIBLE_FEAT);
    eval("sub ZPOOL_STATUS_OK () { 32; }") unless defined(&ZPOOL_STATUS_OK);
    eval("sub VDEV_NAME_PATH () { 1<<0; }") unless defined(&VDEV_NAME_PATH);
    eval("sub VDEV_NAME_GUID () { 1<<1; }") unless defined(&VDEV_NAME_GUID);
    eval("sub VDEV_NAME_FOLLOW_LINKS () { 1<<2; }") unless defined(&VDEV_NAME_FOLLOW_LINKS);
    eval("sub VDEV_NAME_TYPE_ID () { 1<<3; }") unless defined(&VDEV_NAME_TYPE_ID);
    eval 'sub ZFS_MOUNTPOINT_NONE () {"none";}' unless defined(&ZFS_MOUNTPOINT_NONE);
    eval 'sub ZFS_MOUNTPOINT_LEGACY () {"legacy";}' unless defined(&ZFS_MOUNTPOINT_LEGACY);
    eval 'sub ZFS_FEATURE_DISABLED () {"disabled";}' unless defined(&ZFS_FEATURE_DISABLED);
    eval 'sub ZFS_FEATURE_ENABLED () {"enabled";}' unless defined(&ZFS_FEATURE_ENABLED);
    eval 'sub ZFS_FEATURE_ACTIVE () {"active";}' unless defined(&ZFS_FEATURE_ACTIVE);
    eval 'sub ZFS_UNSUPPORTED_INACTIVE () {"inactive";}' unless defined(&ZFS_UNSUPPORTED_INACTIVE);
    eval 'sub ZFS_UNSUPPORTED_READONLY () {"readonly";}' unless defined(&ZFS_UNSUPPORTED_READONLY);
    eval 'sub ZFS_GET_NCOLS () {5;}' unless defined(&ZFS_GET_NCOLS);
    eval("sub GET_COL_NONE () { 0; }") unless defined(&GET_COL_NONE);
    eval("sub GET_COL_NAME () { 1; }") unless defined(&GET_COL_NAME);
    eval("sub GET_COL_PROPERTY () { 2; }") unless defined(&GET_COL_PROPERTY);
    eval("sub GET_COL_VALUE () { 3; }") unless defined(&GET_COL_VALUE);
    eval("sub GET_COL_RECVD () { 4; }") unless defined(&GET_COL_RECVD);
    eval("sub GET_COL_SOURCE () { 5; }") unless defined(&GET_COL_SOURCE);
    eval 'sub ZFS_SET_NOMOUNT () {1;}' unless defined(&ZFS_SET_NOMOUNT);
    eval 'sub ZFS_ITER_RECURSE () {(1<< 0);}' unless defined(&ZFS_ITER_RECURSE);
    eval 'sub ZFS_ITER_ARGS_CAN_BE_PATHS () {(1<< 1);}' unless defined(&ZFS_ITER_ARGS_CAN_BE_PATHS);
    eval 'sub ZFS_ITER_PROP_LISTSNAPS () {(1<< 2);}' unless defined(&ZFS_ITER_PROP_LISTSNAPS);
    eval 'sub ZFS_ITER_DEPTH_LIMIT () {(1<< 3);}' unless defined(&ZFS_ITER_DEPTH_LIMIT);
    eval 'sub ZFS_ITER_RECVD_PROPS () {(1<< 4);}' unless defined(&ZFS_ITER_RECVD_PROPS);
    eval 'sub ZFS_ITER_LITERAL_PROPS () {(1<< 5);}' unless defined(&ZFS_ITER_LITERAL_PROPS);
    eval 'sub ZFS_ITER_SIMPLE () {(1<< 6);}' unless defined(&ZFS_ITER_SIMPLE);
    eval("sub ZFS_DIFF_PARSEABLE () { 1<<0; }") unless defined(&ZFS_DIFF_PARSEABLE);
    eval("sub ZFS_DIFF_TIMESTAMP () { 1<<1; }") unless defined(&ZFS_DIFF_TIMESTAMP);
    eval("sub ZFS_DIFF_CLASSIFY () { 1<<2; }") unless defined(&ZFS_DIFF_CLASSIFY);
    eval("sub ZFS_DIFF_NO_MANGLE () { 1<<3; }") unless defined(&ZFS_DIFF_NO_MANGLE);
    if(defined(&__linux__) || defined(&__APPLE__)) {
    }
    eval 'sub SA_NO_PROTOCOL () {-1;}' unless defined(&SA_NO_PROTOCOL);
    eval 'sub STDOUT_VERBOSE () {0x1;}' unless defined(&STDOUT_VERBOSE);
    eval 'sub STDERR_VERBOSE () {0x2;}' unless defined(&STDERR_VERBOSE);
    eval 'sub NO_DEFAULT_PATH () {0x4;}' unless defined(&NO_DEFAULT_PATH);
    eval("sub ZPOOL_COMPATIBILITY_OK () { 0; }") unless defined(&ZPOOL_COMPATIBILITY_OK);
    eval("sub ZPOOL_COMPATIBILITY_WARNTOKEN () { 1; }") unless defined(&ZPOOL_COMPATIBILITY_WARNTOKEN);
    eval("sub ZPOOL_COMPATIBILITY_BADTOKEN () { 2; }") unless defined(&ZPOOL_COMPATIBILITY_BADTOKEN);
    eval("sub ZPOOL_COMPATIBILITY_BADFILE () { 3; }") unless defined(&ZPOOL_COMPATIBILITY_BADFILE);
    eval("sub ZPOOL_COMPATIBILITY_NOFILES () { 4; }") unless defined(&ZPOOL_COMPATIBILITY_NOFILES);
    if(defined(&__FreeBSD__)) {
    }
    if(defined(&__linux__)) {
    }
    if(defined(&__cplusplus)) {
    }
}
1;
